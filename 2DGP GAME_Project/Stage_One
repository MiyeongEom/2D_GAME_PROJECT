 case pico2d.SDLK_RIGHT:
                    main_hero.plus_move = 0
                    main_hero.dir2 = 1
                    main_hero.dir += 1

                case pico2d.SDLK_LEFT:
                    main_hero.plus_move = 0
                    main_hero.dir2 = -1
                    main_hero.dir -= 1

        elif event.type == SDL_KEYUP:
            if event.key == SDLK_RIGHT:  # 오른쪽
                main_hero.dir -= 1
            elif event.key == SDLK_LEFT:  # 왼쪽
                main_hero.dir += 1
            elif event.key == SDLK_a:
                main_hero.action = 0



 frame = 0
    ground = True
    dir = 0
    dir2 = 1
    plus_move = 1
    action = 0

    def __init__(self):
        self.x = 100
        self.y = 75
        self.stand_image = load_image('MC_Idle.png')
        self.walking_image = load_image('MC_Walking.PNG')
        # 592 102

    def update(self):
        self.left = self.x - 30
        self.right = self.x + 30
        self.top = self.y - 30
        self.bottom = self.y + 30
        self.frame = (self.frame + 1) % 6

        if self.dir == 1:
            self.x += 30
        elif self.dir == -1:
            self.x -= 30

        if self.dir != 0 and self.plus_move < 15:
            self.plus_move += 1
            if self.plus_move > 15:
                self.plus_move = 15

        elif self.dir == 0 and self.plus_move > 0:
            self.plus_move -= 2
            if self.plus_move < 0:
                self.plus_move = 0

        if self.dir != 0 and self.dir != self.dir2:
            self.plus_move = 0

        if self.x > 1260 and self.dir != -1:
            self.x = 1260

        elif self.x < 30 and self.dir != 1:
            self.x = 30

    def draw(self):
      # self.stand_image.clip_draw(int(self.frame) * 100, 0, 100, 100, self.x, self.y, 100, 100)
      # delay(0.15)

        if self.dir == 1:  # 오른쪽
            self.walking_image.clip_draw(int(self.frame) * 100, 0, 100, 100, self.x, self.y, 100, 100)

        elif self.dir == -1:  # 왼쪽
            self.walking_image.clip_composite_draw(int(self.frame) * 100, 0, 100, 100, 0, 'h', self.x, self.y, 100, 100)

        elif self.dir == 0 and self.dir2 == 1:
            self.stand_image.clip_draw(int(self.frame) * 100, 0, 100, 100, self.x, self.y, 100, 100)

        elif self.dir == 0 and self.dir2 == -1:
            self.stand_image.clip_composite_draw(int(self.frame) * 100, 0, 100, 100, 0, 'h', self.x, self.y, 100, 100)
        delay(0.15)